server:
    contextPath: /PaperDetect
    port: 80
    compression:
        enabled: true
    tomcat:
      uri-encoding: UTF-8
      
---

grails:
    profile: rest-api
    codegen: 
        defaultPackage: pd
    spring:
        transactionManagement:
            proxies: false
    gorm:
        # Whether to autowire entities. 
        # Disabled by default for performance reasons.
        autowire: true         
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
    views:
        json:
            compileStatic: true
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    main:
        banner-mode: console
    groovy:
        template:
            check-template-location: false
    profiles: 

# Spring Actuator Endpoints are Disabled by Default
endpoints:
    enabled: false
    jmx:
        enabled: true
        
---
grails:
    web:
        url:
            converter: hyphenated  
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
        upload:
            maxFileSize: 50000000
            maxRequestSize: 50000000
    converters:
        encoding: UTF-8
    mime:
            disable:
                accept:
                    header:
                        userAgents:
                            - Gecko
                            - WebKit
                            - Presto
                            - Trident
            types:
                json:
                  - application/json
                  - text/json   
                hal:
                  - application/hal+json
                  - application/hal+xml  
                xml:
                  - text/xml
                  - application/xml                                 
                atom: application/atom+xml
                css: text/css
                csv: text/csv
                js: text/javascript
                rss: application/rss+xml
                text: text/plain
                all: '*/*'

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: true
        use_query_cache: false

---
environments:
    development:
        dataSource: 
            driverClassName: org.h2.Driver
            url: jdbc:h2:file:D:/PD/data/db/PD;AUTO_SERVER=TRUE;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            dbCreate: update
            username: root
            pooled: true
            jmxExport: true
    test:
        dataSource: 
            driverClassName: org.h2.Driver
            url: jdbc:h2:file:D:/PD/data/db/PD;AUTO_SERVER=TRUE;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            dbCreate: update
            username: root
            pooled: true
            jmxExport: true
    production:
        dataSource:
            driverClassName: org.h2.Driver
            url: jdbc:h2:file:~/PD/data/db/PD;AUTO_SERVER=TRUE;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
            dbCreate: update
            username: root
            pooled: true
            jmxExport: true
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED

